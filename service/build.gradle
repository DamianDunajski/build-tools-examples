dependencies {
    compile project(':model')
    compile 'io.dropwizard:dropwizard-core:0.7.1'
    compile 'com.wordnik:swagger-jaxrs_2.10:1.3.6'
}

task uberjar(type: Jar, dependsOn: jar) {
    classifier = 'uberjar'

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE

    from sourceSets.main.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }

    exclude 'META-INF/*.SF'
    exclude 'META-INF/*.DSA'
    exclude 'META-INF/*.RSA'
    exclude 'META-INF/maven/**'

    manifest {
        attributes 'Main-Class': 'pl.geeksoft.px.service.ServiceRunner'
    }
}

task runService(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath

    main = 'pl.geeksoft.px.service.ServiceRunner'
    args = ['server', 'build/resources/main/config.yaml']
}